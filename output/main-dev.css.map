{"version":3,"sources":["../src/scss/main.scss","../src/scss/01-settings/_variables.scss","../src/scss/01-settings/_mixins.scss","../src/scss/02-generic/_reset.scss","../src/scss/03-elements/_body.scss","../src/scss/03-elements/_code.scss","../src/scss/04-components/_icons.scss","../src/scss/05-layout/_rwd.scss"],"names":[],"mappings":"AAAA,mBAAiB;ACAjB,iBAAe;AAQf,kBAAgB;AAIhB,sBAAoB;ACZpB,4BAA0B;;ACA1B,gBAAc;;AACd;EACE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EDPE,UAAU;EACV,SAAS;ACQX;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EDfE,qBAAqB;EALrB,UAAU;EACV,SAAS;AC0BX;;AAHE;EDxBA,UAAU;EACV,SAAS;ECyBT;;AAGF;EACE,aAAa;AACf;;ACjCA;EACE,eAAe;AACjB;;AAEA;;EAEE,gIAAuB;EACvB,iCAAqB;EACrB,gBAAwB;EACxB,yBAA6B;EAC7B,WAAkB;;AAEpB;ACZA;EACE,oFAAuB;EACvB,kBAAkB;EAClB,gBAA6B;EAC7B,WAAuB;EACvB,wCAAwC;EACxC,gCAA4B;;EAE5B,sBAAkC;AACpC;AAEA;EACE,cAAc;EACd,yBAAyB;EACzB,cAAc;AAChB;;ACfA,oBAAkB;;AAOlB;EACE,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,4BAA4B;EAC5B,wBAAwB;AAC1B;;AAlBE;IACE,odAAwC;EAC1C;;AAFA;IACE,+kBAAwC;EAC1C;;AAFA;IACE,0tBAAwC;EAC1C;;ACJF,2BAAyB;;AAOzB;;;CAGC;;AAOD;EACE,WAAW;EACX,cAAc;AAKhB;;AAEA;EACE,WAAW;AAab;;AA5BE;;AAcF;IAII;AAUJ;AA1BE;;AAFA;;AAKF;IAKI;AAEJ;;AAEA;IAQI;AAMJ;AA1BE;;AAFA;;AAcF;IAYI;AAEJ;AA1BE;;AJqBF;;EAEE;IACE,gCAAgC;EAClC;;EAEA;IACE,iDAAiD;IACjD,8BAA8B;IAC9B,gDAAgD;IAChD,uCAAuC;EACzC;AAEF","file":"main-dev.css","sourcesContent":["// partial imports\n@import '01-settings/_variables';\n@import '01-settings/_mixins';\n\n@import '02-generic/_reset.scss';\n\n@import '03-elements/_body.scss';\n@import '03-elements/_code.scss';\n\n@import '04-components/_icons.scss';\n\n@import '05-layout/_rwd.scss';\n","// default fonts\n$font-main: sans-serif !default;\n$font-size: 100% !default;\n$lineheight: 1.5 !default;\n\n$font-code: monospace !default;\n$lineheight-code: 1.0 !default;\n\n// default colors\n$color-back: #fff !default;\n$color-fore: #333 !default;\n\n// code sample colors\n$color-code-back: #000 !default;\n$color-code-fore: #0c0 !default;\n$color-code-bord: #666 !default;\n","// reset padding and margin\n@mixin reset {\n  padding: 0;\n  margin: 0;\n}\n\n@mixin resetlist {\n  list-style-type: none;\n  @include reset;\n}\n","// reset styles\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nbody, h1, h2, h3, h4, p, figure, blockquote, dl, dd {\n  @include reset;\n}\n\nbody {\n  text-rendering: optimizeSpeed;\n}\n\nimg, picture {\n  max-width: 100%;\n  display: block;\n}\n\nul[class], ol[class] {\n\n  @include resetlist;\n\n  li {\n    @include reset;\n  }\n}\n\ninput, button, textarea, select {\n  font: inherit;\n}\n\n@media (prefers-reduced-motion: reduce) {\n\n  html {\n    scroll-behavior: auto !important;\n  }\n\n  *, *:before, *:after {\n    transition-timing-function: step-start !important;\n    animation-delay: 0s !important;\n    animation-timing-function: step-start !important;\n    animation-iteration-count: 1 !important;\n  }\n\n}\n",":root {\n  font-size: 100%;\n}\n\nbody {\n\n  font-family: $font-main;\n  font-size: $font-size;\n  line-height: $lineheight;\n  background-color: $color-back;\n  color: $color-fore;\n\n}\n","pre, code {\n  font-family: $font-code;\n  font-size: inherit;\n  line-height: $lineheight-code;\n  color: $color-code-fore;\n  /* background-color: $color-code-back; */\n  background-color: $schwuppsi;\n\n  border: 1px solid $color-code-bord;\n}\n\npre code {\n  color: inherit;\n  background-color: inherit;\n  border: 0 none;\n}\n","// inline SVG icons\n@mixin icon($name) {\n  .#{$name}::before {\n    background-image: inline('#{$name}.svg');\n  }\n}\n\n.icon, .icon::before {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.icon::before {\n  content: '';\n  width: 1.6em;\n  height: 1.6em;\n  font-weight: normal;\n  margin-right: 0.5em;\n  background-repeat: no-repeat;\n  background-position: 50%;\n}\n\n@include icon(email);\n@include icon(rss);\n@include icon(twitter);\n","// media query breakpoints\n$breakpoint: (\n\t'small':\t36rem,\n\t'medium': 50rem,\n\t'large':\t64rem\n);\n\n/*\nresponsive breakpoint mixin:\n@include respond('medium') { ... }\n*/\n@mixin respond($bp) {\n  @media (min-width: map-get($breakpoint, $bp)) {\n    @content;\n  }\n}\n\nmain {\n  width: 100%;\n  margin: 0 auto;\n\n  @include respond('medium') {\n    width: 40em;\n  }\n}\n\n#menu {\n  width: 100%;\n\n  @include respond('small') {\n    width: 20rem;\n  }\n\n  @include respond('medium') {\n    width: 30rem;\n  }\n\n  @include respond('large') {\n    width: 40rem;\n  }\n}\n"]}